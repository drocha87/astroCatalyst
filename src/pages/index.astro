---
import Layout from "../layout/Layout.astro";
import IcbDialog from "../components/IcbDialog.astro";
import IcbFocusTrap from "../components/IcbFocusTrap.astro";
import IcbTabView from "../components/IcbTabView.astro";
import IcbTabPanel from "../components/IcbTabPanel.astro";

import { Content as Diego } from "../../README.md";
import { Prism } from "@astrojs/prism";
---

<Layout title="DrTeleport">
  <h1 class="text-4xl">Astro with Catalyst</h1>

  <p class="my-8">
    This project is a experimentation on using
    <b><a href="https://catalyst.rocks/guide/introduction/">Catalyst</a></b>
    together with <b><a href="https://astro.build/">astrojs</a></b>.
  </p>

  <p class="mb-8">
    These are the steps necessary to integrate catalyst with astro.
  </p>

  <Prism lang="sh" code={`npm install @github/catalyst`} />

  <p class="my-8">
    After adding the catalyst to your project you need to configure typescript
    so it enables using decorators. In your `tsconfig.json` add the properties
    to `compilerOptions`
  </p>

  <Prism
    lang="json"
    code={`
{
  "extends": "astro/tsconfigs/strict",
  "compilerOptions": {
    "jsx": "preserve",
    "target": "ES2020",
    "emitDecoratorMetadata": true,
    "strictPropertyInitialization": false,
    "sourceMap": true,
    "experimentalDecorators": true
  }
}
`}
  />

  <p class="my-8">
    And configure the build system to keep the class names as it is mandatory to
    catalyst, adding this vite configuration to <b>defineConfig</b> in
    <b>astro.config.mjs</b>
  </p>

  <Prism
    lang="js"
    code={`
vite: {
  esbuild: {
    minifyIdentifiers: false,
  },
}
`}
  />
</Layout>
